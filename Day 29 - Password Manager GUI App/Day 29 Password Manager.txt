Day 29 - Password Manager

Overview
This is a simple password manager built using Tkinter. It allows users to securely store website login details, generate strong passwords, and copy them to the clipboard. The application features a user-friendly graphical interface and provides an efficient way to manage credentials.

Features
Stores website, username, and password details in a text file.
Generates strong random passwords with letters, numbers, and symbols.
Copies generated passwords to the clipboard automatically.
Uses Tkinter's messagebox to ensure users confirm before saving data.

How it Works (Code Overview)
generate_password() -> Generates a secure password and copies it to the clipboard.
save() -> Saves the entered website, username, and password to a file after confirmation.
Entry() -> Accepts user input for website, username, and password.
Label() -> Displays descriptive text for input fields.
Button() -> Triggers password generation and saves login details.
messagebox.askokcancel() -> Displays a confirmation prompt before saving credentials.
window.mainloop() -> Keeps the GUI running and responsive.

Usage
Enter the website name.
Enter your email or username.
Generate a secure password or enter your own.
Click "Add" to save the credentials.
The saved data will be stored in data.txt.

Requirements
Python 3.x
Tkinter (included in standard Python library)
pyperclip (install using pip install pyperclip)

Setup & Execution
Ensure Python is installed.
Save the script as main.py.
Run the script using:
python main.py
Use the GUI to generate and save passwords.

Notes
The program warns users if any fields are empty.
Passwords are stored in plain text (data.txt), so consider implementing encryption for enhanced security.
Generated passwords are automatically copied to the clipboard.
